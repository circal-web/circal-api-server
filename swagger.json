{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Company": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"licenseId": {
						"type": "string"
					}
				},
				"required": [
					"_id",
					"name",
					"licenseId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Company.name-or-licenseId_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"licenseId": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"licenseId"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"CompanyCreationRequest": {
				"$ref": "#/components/schemas/Pick_Company.name-or-licenseId_"
			},
			"CompanyUpdateRequest": {
				"$ref": "#/components/schemas/Pick_Company.name-or-licenseId_"
			},
			"License": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"licenseType": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"numberOfUsers": {
						"type": "number",
						"format": "double"
					},
					"activationDate": {
						"type": "string",
						"format": "date-time"
					},
					"expirationDate": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"_id",
					"licenseType",
					"code",
					"numberOfUsers",
					"activationDate",
					"expirationDate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_License.licenseType-or-code-or-numberOfUsers-or-activationDate-or-expirationDate_": {
				"properties": {
					"licenseType": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"numberOfUsers": {
						"type": "number",
						"format": "double"
					},
					"activationDate": {
						"type": "string",
						"format": "date-time"
					},
					"expirationDate": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"licenseType",
					"code",
					"numberOfUsers",
					"activationDate",
					"expirationDate"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"LicenseCreationRequest": {
				"$ref": "#/components/schemas/Pick_License.licenseType-or-code-or-numberOfUsers-or-activationDate-or-expirationDate_"
			},
			"LicenseUpdateRequest": {
				"$ref": "#/components/schemas/Pick_License.licenseType-or-code-or-numberOfUsers-or-activationDate-or-expirationDate_"
			},
			"Meeting": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"startTime": {
						"type": "string",
						"format": "date-time"
					},
					"endTime": {
						"type": "string",
						"format": "date-time"
					},
					"preMeetingAgenda": {
						"type": "string"
					},
					"attendingUsers": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"_id",
					"title",
					"startTime",
					"endTime",
					"preMeetingAgenda",
					"attendingUsers",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Meeting.title-or-startTime-or-endTime-or-preMeetingAgenda-or-attendingUsers-or-status_": {
				"properties": {
					"title": {
						"type": "string"
					},
					"startTime": {
						"type": "string",
						"format": "date-time"
					},
					"endTime": {
						"type": "string",
						"format": "date-time"
					},
					"preMeetingAgenda": {
						"type": "string"
					},
					"attendingUsers": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"title",
					"startTime",
					"endTime",
					"preMeetingAgenda",
					"attendingUsers",
					"status"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"MeetingCreationRequest": {
				"$ref": "#/components/schemas/Pick_Meeting.title-or-startTime-or-endTime-or-preMeetingAgenda-or-attendingUsers-or-status_"
			},
			"MeetingUpdateRequest": {
				"$ref": "#/components/schemas/Pick_Meeting.title-or-startTime-or-endTime-or-preMeetingAgenda-or-attendingUsers-or-status_"
			},
			"Task": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"taskName": {
						"type": "string"
					},
					"dueDate": {
						"type": "string",
						"format": "date-time"
					},
					"priority": {
						"type": "string"
					},
					"completionStatus": {
						"type": "string"
					}
				},
				"required": [
					"_id",
					"userId",
					"taskName",
					"dueDate",
					"priority",
					"completionStatus"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Task.taskName-or-userId-or-dueDate-or-priority-or-completionStatus_": {
				"properties": {
					"taskName": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"dueDate": {
						"type": "string",
						"format": "date-time"
					},
					"priority": {
						"type": "string"
					},
					"completionStatus": {
						"type": "string"
					}
				},
				"required": [
					"taskName",
					"userId",
					"dueDate",
					"priority",
					"completionStatus"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"TaskCreationRequest": {
				"$ref": "#/components/schemas/Pick_Task.taskName-or-userId-or-dueDate-or-priority-or-completionStatus_"
			},
			"TaskUpdateRequest": {
				"$ref": "#/components/schemas/Pick_Task.taskName-or-userId-or-dueDate-or-priority-or-completionStatus_"
			},
			"UserAccountLinks": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"accountType": {
						"type": "string"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"_id",
					"accountType",
					"token"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"passwordHash": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"profileURL": {
						"type": "string"
					},
					"companyId": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"cal_keys": {
						"items": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"type": "array"
					},
					"calendar": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"accountLinks": {
						"items": {
							"$ref": "#/components/schemas/UserAccountLinks"
						},
						"type": "array"
					}
				},
				"required": [
					"_id",
					"role",
					"username",
					"firstName",
					"lastName",
					"passwordHash",
					"email",
					"profileURL",
					"companyId",
					"status",
					"cal_keys",
					"calendar",
					"accountLinks"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.role-or-firstName-or-lastName-or-email-or-companyId-or-status-or-calendar_": {
				"properties": {
					"status": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"companyId": {
						"type": "string"
					},
					"calendar": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"status",
					"role",
					"firstName",
					"lastName",
					"email",
					"companyId",
					"calendar"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserCreationRequest": {
				"$ref": "#/components/schemas/Pick_User.role-or-firstName-or-lastName-or-email-or-companyId-or-status-or-calendar_"
			},
			"UserUpdateRequest": {
				"$ref": "#/components/schemas/Pick_User.role-or-firstName-or-lastName-or-email-or-companyId-or-status-or-calendar_"
			},
			"Pick_UserAccountLinks.accountType-or-token_": {
				"properties": {
					"accountType": {
						"type": "string"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"accountType",
					"token"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserAccountLinksCreationRequest": {
				"$ref": "#/components/schemas/Pick_UserAccountLinks.accountType-or-token_"
			},
			"Pick_UserAccountLinks.accountType_": {
				"properties": {
					"accountType": {
						"type": "string"
					}
				},
				"required": [
					"accountType"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserAccountLinksUpdateRequest": {
				"$ref": "#/components/schemas/Pick_UserAccountLinks.accountType_"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "circal-api-server",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/company/all": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Company"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/company": {
			"get": {
				"operationId": "GetByCompanyName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Company"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CompanyCreationRequest"
							}
						}
					}
				}
			}
		},
		"/company/{id}": {
			"put": {
				"operationId": "Update",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CompanyUpdateRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/license/all": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/License"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/license/student": {
			"get": {
				"operationId": "GetAllStudentLicences",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/License"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/license": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/License"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LicenseCreationRequest"
							}
						}
					}
				}
			}
		},
		"/license/{id}": {
			"put": {
				"operationId": "Update",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LicenseUpdateRequest"
							}
						}
					}
				}
			}
		},
		"/meeting/all": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Meeting"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/meeting/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Meeting"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MeetingUpdateRequest"
							}
						}
					}
				}
			}
		},
		"/meeting": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Meeting"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MeetingCreationRequest"
							}
						}
					}
				}
			}
		},
		"/meeting/schedule/{id}": {
			"get": {
				"operationId": "SmartScheduling",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Meeting"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/task/all": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Task"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/task/getOnDate/{userId}": {
			"get": {
				"operationId": "GetOnDate",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Task"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "dueDate",
						"required": true,
						"schema": {
							"format": "date-time",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/task/getPriority/{userId}": {
			"get": {
				"operationId": "GetByPriority",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Task"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "priority",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/task/getStatus/{userId}": {
			"get": {
				"operationId": "GetByStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Task"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "completionStatus",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/task": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Task"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TaskCreationRequest"
							}
						}
					}
				}
			}
		},
		"/task/{id}": {
			"put": {
				"operationId": "Update",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TaskUpdateRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/all": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/user/get/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreationRequest"
							}
						}
					}
				}
			}
		},
		"/user/delete/{id}": {
			"delete": {
				"operationId": "Remove",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/put/{id}": {
			"put": {
				"operationId": "Update",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserUpdateRequest"
							}
						}
					}
				}
			}
		},
		"/useraccountlinks/all": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/License"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/useraccountlinks": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserAccountLinks"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserAccountLinksCreationRequest"
							}
						}
					}
				}
			}
		},
		"/useraccountlinks/{id}": {
			"put": {
				"operationId": "Update",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserAccountLinksUpdateRequest"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}